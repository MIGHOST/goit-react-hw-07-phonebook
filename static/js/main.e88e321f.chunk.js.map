{"version":3,"sources":["assert/transition/pop.module.css","assert/transition/slide.module.css","components/Button/Button.js","components/ContactForm/validation.js","components/ContactForm/ContactForm.js","store/action/contactAction.js","store/operation/contactOperation.js","components/container/ContactFormContainer.js","components/Contacts/Contacts.js","components/container/ContactContainer.js","components/Loader/Spinner.js","components/ContactList/ContactList.js","store/selectors/contactSelectors.js","store/selectors/loaderSelector.js","components/container/ContactListContainer.js","components/ContactFilter/ContactFilter.js","store/action/filterAction.js","components/container/ContactFilterContainer.js","components/Error/Error.js","components/Phonebook/Phonebook.js","store/selectors/errorSelector.js","components/container/PhBookContainer.js","components/App/App.js","store/reducer/contactReduce.js","store/reducer/filterReducer.js","store/reducer/loaderReducer.js","store/reducer/errorReducer.js","store/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/Button/Button.module.css","components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","Button","title","btnClass","disabled","styles","active","type","className","schema","yup","shape","name","min","max","required","number","ContactForm","asyncAddOneContact","initialValues","validationSchema","onSubmit","values","resetForm","handleChange","handleSubmit","isSubmitting","form","htmlFor","label","value","id","onChange","autoComplete","input","msg","error","addOneContact","createAction","addOneContactRequest","addOneContactSuccess","addOneContactError","getContacts","getContactsRequest","getContactsSuccess","getContactsError","deleteContact","deleteContactRequest","deleteContactSuccess","deleteContactError","resetError","axios","defaults","baseURL","options","headers","mapDispatchToProps","contact","dispatch","a","newContact","shortid","generate","post","data","connect","state","contacts","Contacts","asyncDeleteContact","container","text","onClick","btn","delete","Spinner","color","height","width","timeout","ContactList","loader","TransitionGroup","list","component","map","item","CSSTransition","unmountOnExit","classNames","popTransition","key","items","getFilteredContacts","createSelector","filter","toLowerCase","includes","getLoader","ContactFilter","filterContact","event","payload","target","Error","Phonebook","this","props","getAllContacts","logo","position","autoClose","closeOnClick","in","length","slideTransition","Component","getError","get","App","contactReducer","createReducer","filteredContact","loaderReducer","errorReducer","rootReducer","combineReducers","filterReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e88e321f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__jn_7Q\",\"enterActive\":\"pop_enterActive__3WdEP\",\"exit\":\"pop_exit__ckxcl\",\"exitActive\":\"pop_exitActive__1bzoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2zbaE\",\"enterActive\":\"slide_enterActive__2Pe55\",\"exit\":\"slide_exit__1Rrmx\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ title, disabled }) => {\r\n  const btnClass = disabled ? styles.disabled : styles.active;\r\n\r\n  return (\r\n    <button type=\"submit\" className={btnClass}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\nexport default Button;\r\n","import * as yup from 'yup'\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string()\r\n      .min(2, 'Is to small name')\r\n      .max(35, 'Is to long')\r\n      .required('Required'),\r\n    number: yup.number()\r\n      .min(555555, 'Must be longer than 6 characters')\r\n      .required('Required'),\r\n  });\r\n  \r\n  export default schema;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport schema from './validation';\r\n\r\nconst ContactForm = ({ asyncAddOneContact }) => {\r\n  const initialValues = {\r\n    name: '',\r\n    number: 0,\r\n  };\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    asyncAddOneContact({ ...values });\r\n\r\n    resetForm({});\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={schema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ values, handleChange, handleSubmit, isSubmitting }) => (\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label htmlFor=\"name\" className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={values.name}\r\n              id=\"name\"\r\n              onChange={handleChange}\r\n              autoComplete=\"off\"\r\n              className={styles.input}\r\n            />\r\n            <ErrorMessage name=\"name\">\r\n              {msg => <div className={styles.error}>{msg}</div>}\r\n            </ErrorMessage>\r\n          </label>\r\n          <label htmlFor=\"number\" className={styles.label}>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={values.number === 0 ? '' : values.number}\r\n              id=\"number\"\r\n              name=\"number\"\r\n              onChange={handleChange}\r\n              className={styles.input}\r\n              autoComplete=\"off\"\r\n            />\r\n            <ErrorMessage name=\"number\">\r\n              {msg => <div className={styles.error}>{msg}</div>}\r\n            </ErrorMessage>\r\n          </label>\r\n          <Button title=\"Add contact\" disabled={isSubmitting} />\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nContactForm.propTypes={\r\n  asyncAddOneContact: PropTypes.func.isRequired,\r\n}\r\nexport default ContactForm;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addOneContact = createAction('contacts/create');\r\nexport const addOneContactRequest = createAction('contacts/addRequest');\r\nexport const addOneContactSuccess = createAction('contacts/addSuccess');\r\nexport const addOneContactError = createAction('contacts/addError');\r\n\r\nexport const getContacts = createAction('contacts/getContacts');\r\nexport const getContactsRequest = createAction('contacts/getRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContacts');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const deleteContact = createAction('remove');\r\nexport const deleteContactRequest = createAction('contacts/removeRequest');\r\nexport const deleteContactSuccess = createAction('contacts/removeSuccess');\r\nexport const deleteContactError = createAction('contacts/removeError');\r\n\r\nexport const resetError = createAction('contacts/resetError')\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  addOneContact,\r\n  addOneContactRequest,\r\n  addOneContactSuccess,\r\n  addOneContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContact,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  resetError,\r\n} from '../action/contactAction';\r\nimport shortid from 'shortid';\r\naxios.defaults.baseURL = 'http://localhost:5050';\r\n\r\nconst options = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\nexport const asyncAddOneContact = contact => async dispatch => {\r\n  dispatch(addOneContactRequest());\r\n  const newContact = { ...contact, id: shortid.generate() };\r\n  try {\r\n    dispatch(resetError());\r\n    const { data } = await axios.post('/contacts', newContact, options);\r\n    dispatch(addOneContact(data));\r\n  } catch (error) {\r\n    dispatch(addOneContactError());\r\n  } finally {\r\n    dispatch(addOneContactSuccess());\r\n  }\r\n};\r\n\r\nexport const asyncDeleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    dispatch(resetError());\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError());\r\n  } finally {\r\n    dispatch(deleteContactSuccess());\r\n  }\r\n};\r\n\r\nexport const asyncGetContacts = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    dispatch(resetError());\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsError());\r\n  }\r\n};\r\n","import ContactForm from '../ContactForm/ContactForm';\r\nimport { connect } from 'react-redux';\r\nimport { asyncAddOneContact } from '../../store/operation/contactOperation';\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  asyncAddOneContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ name, number, id, asyncDeleteContact }) => (\r\n  <div className={styles.container}>\r\n    <p className={styles.text}>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => asyncDeleteContact(id)}\r\n      className={styles.btn}\r\n    >\r\n      X\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContacts.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  asyncDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import Contacts from '../Contacts/Contacts';\r\nimport { connect } from 'react-redux';\r\nimport { asyncDeleteContact } from '../../store/operation/contactOperation';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  asyncDeleteContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#000000\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../container/ContactContainer';\r\nimport styles from './ContactList.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport popTransition from '../../assert/transition/pop.module.css';\r\nimport Spinner from '../Loader/Spinner';\r\n\r\nconst ContactList = ({ contacts, loader }) => {\r\n  return (\r\n    <>\r\n      {loader && <Spinner />}\r\n      <TransitionGroup className={styles.list} component=\"ul\">\r\n        {contacts.map(item => (\r\n          <CSSTransition\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={popTransition}\r\n            key={item.id}\r\n          >\r\n            <li className={styles.items}>\r\n              <Contact {...item} />\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  loader: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","const getLoader = state => state.loader;\r\n\r\nexport default getLoader;","import ContactList from '../ContactList/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport {getFilteredContacts} from '../../store/selectors/contactSelectors';\r\nimport getLoader from '../../store/selectors/loaderSelector';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  loader: getLoader(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, filterContact }) => (\r\n  <label className={styles.label}>\r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      className={styles.input}\r\n      value={value}\r\n      onChange={filterContact}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('filtered', event => ({\r\n  payload: event.target.value,\r\n}));\r\n\r\n\r\n","import ContactFilter from '../ContactFilter/ContactFilter';\r\nimport { filterContact } from '../../store/action/filterAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\r\n","import React from 'react';\r\n\r\nconst Error = () => <h2>Woops, something went wrong</h2>;\r\n\r\nexport default Error;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ContactForm from '../container/ContactFormContainer';\r\nimport ContactList from '../container/ContactListContainer';\r\nimport ContactFilter from '../container/ContactFilterContainer';\r\nimport Error from '../Error/Error';\r\nimport styles from './Phonebook.module.css';\r\nimport slideTransition from '../../assert/transition/slide.module.css';\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllContacts();\r\n  }\r\n  render() {\r\n    const { contacts } = this.props;\r\n    const { error } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {error ? (\r\n          <Error />\r\n        ) : (\r\n          <>\r\n            <h1 className={styles.logo}>Phonebook</h1>\r\n            <ContactForm />\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={3000}\r\n              closeOnClick\r\n            />\r\n            <CSSTransition\r\n              in={contacts.length >= 1}\r\n              timeout={250}\r\n              unmountOnExit\r\n              classNames={slideTransition}\r\n            >\r\n              <div>\r\n                <h2 className={styles.text}>Contacts</h2>\r\n                <ContactFilter />\r\n                <ContactList />\r\n              </div>\r\n            </CSSTransition>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape([]).isRequired).isRequired,\r\n  getAllContacts: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n};\r\nexport default Phonebook;\r\n","const getError = state => state.error;\r\n\r\nexport default getError;","import { connect } from 'react-redux';\r\nimport Phonebook from '../Phonebook/Phonebook';\r\nimport { getContacts } from '../../store/selectors/contactSelectors';\r\nimport { asyncGetContacts } from '../../store/operation/contactOperation';\r\nimport getError from '../../store/selectors/errorSelector';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getContacts(state),\r\n    error: getError(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getAllContacts: asyncGetContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\nimport Phonebook from '../container/PhBookContainer';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import {\r\n  getContacts,\r\n  deleteContact,\r\n  addOneContact,\r\n} from '../action/contactAction';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst contactReducer = createReducer([], {\r\n  [addOneContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [getContacts]: (state, { payload }) => [...state, ...payload],\r\n});\r\n\r\nexport default contactReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact} from '../action/filterAction';\r\n\r\nconst filteredContact = createReducer('', {\r\n  [filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default filteredContact;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addOneContactRequest,\r\n  addOneContactSuccess,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n} from '../action/contactAction';\r\nconst initialState = false;\r\n\r\nconst loaderReducer = createReducer(initialState, {\r\n  [addOneContactRequest]: () => true,\r\n  [addOneContactSuccess]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n});\r\nexport default loaderReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addOneContactError,\r\n  getContactsError,\r\n  deleteContactError,\r\n  resetError,\r\n} from '../action/contactAction';\r\n\r\nconst initialState = false;\r\n\r\nconst errorReducer = createReducer(initialState, {\r\n  [addOneContactError]: () => true,\r\n  [getContactsError]: () => true,\r\n  [deleteContactError]: () => true,\r\n  [resetError]: () => false,\r\n});\r\n\r\nexport default errorReducer;\r\n","import { combineReducers} from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport contactReducer from './reducer/contactReduce';\r\nimport filterReducer from './reducer/filterReducer';\r\nimport loaderReducer from './reducer/loaderReducer';\r\nimport errorReducer from './reducer/errorReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer\r\n});\r\n\r\n\r\nconst store = configureStore(\r\n  {\r\n    reducer: rootReducer,\r\n    middleware: [...getDefaultMiddleware(), thunk]\r\n  },\r\n\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assert/index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25yvD\",\"label\":\"ContactForm_label__27k9B\",\"input\":\"ContactForm_input__35RVm\",\"btn\":\"ContactForm_btn__31L1S\",\"error\":\"ContactForm_error__hXP-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1hDbR\",\"text\":\"Contacts_text__1v1T-\",\"btn\":\"Contacts_btn__b4_3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3dD8m\",\"disabled\":\"Button_disabled__1Vy2k Button_button__3dD8m\",\"active\":\"Button_active__3W5io Button_button__3dD8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__SvqRn\",\"items\":\"ContactList_items__jlQk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__3awKM\",\"input\":\"ContactFilter_input__9TCR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Phonebook_logo__As_el\",\"logo-wake\":\"Phonebook_logo-wake__1d4gk\",\"text\":\"Phonebook_text__1tPxK\"};"],"sourceRoot":""}